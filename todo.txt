depend:
dht: messaes, fileshare

profile:
 login pub key
 date,expire
 t:l:client key *
 t:l:backup ID *
 other t:l:v
 t:l:sig(login,msg)
 --
 store at nodes near pub
 re-insert regulary (remote check date)
 UI app creates the profile and pass to D

directory:
- group files of common category
- allow nodes select what they host
- tag files in dir, allow easy filter
? key for dir
  - hash of name: popular dirs will overload nodes
  ? flood routing
    - outdated listing
? moderation
? voting

To-Do list
- Loop: order queue of events, dont need to scan full queue
- Loop: threading
- OT: constants
- OT: global upload/downoad speed limit
- OT: config tunables (inidividual, global, upload, download, ReqestMax)
- DB: dat files integration
- DB: gdbm, leveldb
- Libs: avoid dynamic linking system libs like z c m ...
- Model: wrappable generic task messages
- Ctrl: Fetch progress

